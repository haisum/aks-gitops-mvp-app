name: 'Publish Docker Image'
on: 
  push:
    branches: 
    - '!master'
  status:
  deployment: 
  deployment_status:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  publish:
    name: 'Publish Image'
    runs-on: ubuntu-latest
    
    steps:
      - name: 'Checkout'
        uses: actions/checkout@master
      - name: Docker Registry
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: 
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - name: Get Current Date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d%H%M%S')"
      - name: Extract Branch Name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Building Docker Image
        env:
          DOCKER_USERNAME : ${{ secrets.DOCKER_USERNAME }}
          CONTAINER_NAME: helloworld
        run:
          docker build -t $DOCKER_USERNAME/$CONTAINER_NAME:${{steps.extract_branch.outputs.branch}}-${{steps.date.outputs.date}}.${{github.run_id}}.${GITHUB_SHA::7} .
      - name: Push Docker Container to Registry
        env:
          DOCKER_USERNAME : ${{ secrets.DOCKER_USERNAME }}
          CONTAINER_NAME: helloworld
        run: 
          docker push $DOCKER_USERNAME/$CONTAINER_NAME:${{steps.extract_branch.outputs.branch}}-${{steps.date.outputs.date}}.${{github.run_id}}.${GITHUB_SHA::7}

      - uses: actions/github-script@0.8.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            await github.repos.createStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.repo.head,
              context: 'manual',
              state: 'pending',
              description: 'Test status pending'
            });
      
      - uses: actions/github-script@0.8.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            await github.repos.createStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.repo.head,
              context: 'manual',
              state: 'success',
              description: 'Test status success'
            });

      - name: hub example
        shell: bash
        run: |
          curl -fsSL https://github.com/github/hub/raw/master/script/get | bash -s 2.14.1
          bin/hub hub ci-status -v
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


